{
	"auto_complete":
	{
		"selected_items":
		[
			[
				"sta",
				"static"
			],
			[
				"hea",
				"header	Tag"
			],
			[
				"static",
				"static_file"
			],
			[
				"html",
				"html_framework"
			],
			[
				"get",
				"get_cookie"
			],
			[
				"In",
				"Input"
			],
			[
				"cur",
				"cursor_pos"
			],
			[
				"c",
				"cursor_pos"
			],
			[
				"mod",
				"modifier_word"
			],
			[
				"fol",
				"follow_symlinks"
			],
			[
				"line",
				"line_split"
			],
			[
				"fil",
				"file_in"
			],
			[
				"rt",
				"rtUpdate"
			],
			[
				"in",
				"inc	#include \"â€¦\""
			],
			[
				"di",
				"displayAndWait"
			],
			[
				"reg",
				"reg_inst_ptr"
			],
			[
				"CO",
				"ColourOverride"
			],
			[
				"rip",
				"reg_ip"
			],
			[
				"colo",
				"colour_override"
			],
			[
				"col",
				"colour_override"
			],
			[
				"dis",
				"display"
			],
			[
				"ve",
				"v_end"
			],
			[
				"load",
				"loadMemory"
			],
			[
				"find",
				"findPositions"
			],
			[
				"vec",
				"vec"
			],
			[
				"des",
				"design_format"
			],
			[
				"print",
				"printWithColours"
			],
			[
				"replace",
				"replace"
			],
			[
				"str",
				"str_old"
			],
			[
				"char",
				"char_output"
			],
			[
				"reg_",
				"reg_val0"
			],
			[
				"reg_in",
				"reg_instruction"
			],
			[
				"de",
				"design_format"
			],
			[
				"int",
				"intensity"
			],
			[
				"DI",
				"DisplayImage"
			],
			[
				"cl",
				"clickable"
			],
			[
				"shi",
				"shift"
			],
			[
				"sh",
				"r_shift"
			],
			[
				"r",
				"r_seen"
			],
			[
				"x",
				"r_xor"
			],
			[
				"tri",
				"trigger_update"
			],
			[
				"con",
				"conditional"
			],
			[
				"trans",
				"translate"
			],
			[
				"tex",
				"tex_name"
			],
			[
				"tile",
				"tilesets"
			],
			[
				"obj",
				"objectgroup"
			],
			[
				"or",
				"origin_y"
			],
			[
				"sha",
				"shared_ptr_autocast"
			],
			[
				"insta",
				"instanceAdd"
			],
			[
				"shared",
				"shared_ptr"
			],
			[
				"ins",
				"instaces_on_draw"
			],
			[
				"instace",
				"instances_on_update"
			],
			[
				"Call",
				"CallEventDraw"
			],
			[
				"CallE",
				"CallEventUpdate"
			],
			[
				"isA",
				"isActive"
			],
			[
				"st",
				"stable_sort"
			],
			[
				"inst",
				"instances"
			],
			[
				"spr",
				"sprite_mapping"
			],
			[
				"cmdLo",
				"cmdLogInfo"
			],
			[
				"trigg",
				"trigger_draw"
			],
			[
				"CI",
				"CommandInfo"
			],
			[
				"td",
				"trigger_draw"
			],
			[
				"mouse",
				"mouseX"
			],
			[
				"ticks",
				"ticks"
			],
			[
				"Obj",
				"ObjectTwo"
			],
			[
				"Objec",
				"ObjectOne"
			],
			[
				"sr",
				"strip"
			],
			[
				"an",
				"anim_frame"
			],
			[
				"sptr",
				"sprite_mapping"
			],
			[
				"strn",
				"strip_name"
			],
			[
				"to",
				"tex_object"
			],
			[
				"sn",
				"strip_node"
			],
			[
				"sprite",
				"sprite_struct"
			],
			[
				"a",
				"attribute"
			],
			[
				"snd_",
				"snd_source"
			],
			[
				"font",
				"fontsize"
			],
			[
				"snd",
				"snd_name"
			],
			[
				"Sour",
				"SoundBuffer"
			],
			[
				"frl",
				"framelimit"
			],
			[
				"Window",
				"WindowSettings"
			],
			[
				"Wind",
				"WindowSettings"
			],
			[
				"lib",
				"libflexium"
			],
			[
				"ES",
				"EventStartLevel"
			],
			[
				"LCR",
				"LevelChangeRegion"
			],
			[
				"cd",
				"cooldownGet"
			],
			[
				"cool",
				"cooldown_total"
			],
			[
				"AS",
				"AbilityStaff"
			],
			[
				"zoom",
				"zoom_factor"
			],
			[
				"abil",
				"abilities"
			],
			[
				"abilit",
				"ability_keys"
			],
			[
				"AD",
				"AbilityDash"
			],
			[
				"gravity",
				"gravity_enabled"
			],
			[
				"A",
				"AbilityDash"
			],
			[
				"Even",
				"EventSpawnPlayer"
			],
			[
				"psp",
				"rulePlayerSpawn"
			],
			[
				"PSP",
				"PlayerSpawnPoint"
			],
			[
				"PS",
				"PlayerSpawnPoint"
			],
			[
				"kD",
				"keyDownEx"
			],
			[
				"Key",
				"keyPressed"
			],
			[
				"MES",
				"MapEditorSelector"
			],
			[
				"drag",
				"drag_delta"
			],
			[
				"key",
				"keyDown"
			],
			[
				"ME",
				"MapEditor"
			],
			[
				"select",
				"selected"
			],
			[
				"Map",
				"MapEditor"
			],
			[
				"MEO",
				"MapEditorObject"
			],
			[
				"IN",
				"Input"
			],
			[
				"MapE",
				"MapEditorSelector"
			],
			[
				"clas",
				"classv	virtual class-..-(vclass)"
			],
			[
				"V",
				"Vector2f"
			],
			[
				"ti",
				"tilemap_testzone"
			],
			[
				"Al",
				"ALIGENCE_NONE"
			],
			[
				"ALI",
				"ALIGENCE_FRIENDLY"
			],
			[
				"on",
				"onCollision"
			],
			[
				"ss",
				"stringstream"
			],
			[
				"sp",
				"sp"
			],
			[
				"mi",
				"main	main()"
			],
			[
				"o",
				"origin"
			],
			[
				"re",
				"return"
			],
			[
				"he",
				"help_text"
			],
			[
				"com",
				"commandSet"
			],
			[
				"cm",
				"cmdLogClear"
			],
			[
				"comm",
				"command_map"
			],
			[
				"En",
				"SimpleEnemy"
			],
			[
				"jump",
				"jump_force"
			],
			[
				"walk",
				"walk"
			],
			[
				"DP",
				"DamagerPiercing"
			],
			[
				"view",
				"viewSetPosition"
			]
		]
	},
	"buffers":
	[
		{
			"file": "Procfile",
			"settings":
			{
				"buffer_size": 25,
				"line_ending": "Windows"
			}
		},
		{
			"file": "static/index.html",
			"settings":
			{
				"buffer_size": 1020,
				"line_ending": "Windows"
			}
		},
		{
			"file": "HabitCalOnline.sublime-project",
			"settings":
			{
				"buffer_size": 45,
				"line_ending": "Unix"
			}
		},
		{
			"file": "requirements.txt",
			"settings":
			{
				"buffer_size": 43,
				"line_ending": "Windows"
			}
		},
		{
			"file": "app/habit.py",
			"settings":
			{
				"buffer_size": 1968,
				"line_ending": "Windows"
			}
		}
	],
	"build_system": "",
	"build_system_choices":
	[
	],
	"build_varint": "",
	"command_palette":
	{
		"height": 392.0,
		"last_filter": "CLose",
		"selected_items":
		[
			[
				"CLose",
				"Project: Close"
			],
			[
				"Close",
				"Project: Close"
			],
			[
				"Synta Py",
				"Set Syntax: Python"
			],
			[
				"Rename",
				"File: Rename"
			],
			[
				"Lower",
				"Convert Case: Lower Case"
			],
			[
				"Clos",
				"Project: Close"
			],
			[
				"Pro",
				"Project: Close"
			],
			[
				"Pack",
				"Package Control: Install Package"
			],
			[
				"FR",
				"File: Rename"
			],
			[
				"File",
				"File: Rename"
			],
			[
				"Package",
				"Package Control: Install Package"
			],
			[
				"Save",
				"File: Save All"
			],
			[
				"save",
				"File: Save All"
			],
			[
				"File:",
				"File: Save All"
			],
			[
				"Inst",
				"Package Control: Install Package"
			],
			[
				"Package Control: List",
				"Package Control: List Packages"
			],
			[
				"Colo",
				"Colorsublime: Install Theme"
			],
			[
				"Colour",
				"Colorsublime: Install Theme"
			],
			[
				"Package Control",
				"Package Control: Install Package"
			],
			[
				"PackageC",
				"Package Control: Install Package"
			],
			[
				"Package Control: In",
				"Package Control: Install Package"
			],
			[
				"Package Control: Install",
				"Package Control: Install Package"
			],
			[
				"Package Control: ",
				"Package Control: Remove Package"
			],
			[
				"GLSL",
				"Set Syntax: OpenGL SL"
			],
			[
				"",
				"Convert Case: Title Case"
			]
		],
		"width": 400.0
	},
	"console":
	{
		"height": 356.0,
		"history":
		[
			"import urllib.request,os,hashlib; h = '7183a2d3e96f11eeadd761d777e62404' + 'e330c659d4bb41d3bdf022e94cab3cd0'; pf = 'Package Control.sublime-package'; ipp = sublime.installed_packages_path(); urllib.request.install_opener( urllib.request.build_opener( urllib.request.ProxyHandler()) ); by = urllib.request.urlopen( 'http://sublime.wbond.net/' + pf.replace(' ', '%20')).read(); dh = hashlib.sha256(by).hexdigest(); print('Error validating download (got %s instead of %s), please try manual install' % (dh, h)) if dh != h else open(os.path.join( ipp, pf), 'wb' ).write(by)"
		]
	},
	"distraction_free":
	{
		"menu_visible": false,
		"show_minimap": false,
		"show_open_files": false,
		"show_tabs": false,
		"side_bar_visible": false,
		"status_bar_visible": false
	},
	"expanded_folders":
	[
		"/J/HabitCallendarHeroku",
		"/J/HabitCallendarHeroku/app"
	],
	"file_history":
	[
		"/J/HabitCallendarHeroku/original/habit.py",
		"/J/Bottle/requirements.txt",
		"/J/Bottle/original/make_cal.py",
		"/J/Bottle/runtime.txt",
		"/J/Bottle/Procfile",
		"/J/Bottle/gettingstarted/wsgi.py",
		"/J/Bottle/html_writer.py",
		"/J/Bottle/make_cal.py",
		"/J/Bottle/static/style.css",
		"/J/Bottle/habit.py",
		"/J/Bottle/static/index.html",
		"/J/habit_cal.py",
		"/J/HabitCallendar/user_key.txt",
		"/J/Bottle/style.css",
		"/J/Bottle/normalise.css",
		"/J/HabitCallendar/py_habit.py",
		"/J/python-getting-started/runtime.txt",
		"/J/python-getting-started/requirements.txt",
		"/J/python-getting-started/.env",
		"/J/python-getting-started/.gitignore",
		"/J/python-getting-started/manage.py",
		"/J/python-getting-started/Procfile",
		"/J/python-getting-started/README.md",
		"/J/TimeMe/src/Main.cpp",
		"/J/TimeMe/makefile",
		"/J/Flexium/include/Flexium/Input.hpp",
		"/J/Flexium/include/Flexium/Text.hpp",
		"/J/WordFlow/fonts/console.otf",
		"/J/Flexium/include/Flexium/World.hpp",
		"/J/Flexium/src/Text.cpp",
		"/J/Flexium/src/Timer.cpp",
		"/J/Flexium/src/Input.cpp",
		"/J/WordFlow/Main.cpp",
		"/J/Flexium/include/Flexium/Window.hpp",
		"/J/Flexium/src/Window.cpp",
		"/J/WordFlow/WordFlow.sublime-project",
		"/J/Flexium/src/pugixml.cpp",
		"/J/WordFlow/fontsheet.xml",
		"/J/Unify/Unify.cpp",
		"/J/GSL/exampleGame.gsl",
		"/J/dsl/Dsl.cpp",
		"/J/ModularGame/block.cpp",
		"/J/Interp/example.script",
		"/J/Habit/Main.cpp",
		"/J/Dynamo/libs/SFMLWindow.lib.dyn",
		"/J/Dynamo/libs/SFMLWindow.sys.dyn",
		"/J/Dynamo/libs/SFMLWindow.srv.dyn",
		"/J/Inf/Bingle/bingle.in",
		"/J/Inf/Bingle/bingle3.cpp",
		"/J/Inf/GoingHome/home.cpp",
		"/C/Users/DXsmiley/Documents/TeX/MathsNotes.tex",
		"/C/Program Files (x86)/Hewlett-Packard/HP Remote Solution/Registration.xml",
		"/C/Users/DXsmiley/Downloads/Processor-2015-02-27/Processor/proc.cpp",
		"/C/Users/DXsmiley/Downloads/Public Opinions of Wikipedia.csv",
		"/J/USACO/Feb2015/fence.cpp",
		"/J/USACO/Feb2015/hopscotch.cpp",
		"/J/USACO/Feb2015/hopscotch2.cpp",
		"/J/USACO/Feb2015/hopscotch3.cpp",
		"/J/USACO/Feb2015/hopscotch1.cpp",
		"/J/USACO/Feb2015/hopscotch.in",
		"/J/USACO/Feb2015/censoring.cpp",
		"/J/USACO/Feb2015/cencoring_score7.cpp",
		"/J/USACO/Feb2015/censor.in",
		"/J/USACO/Feb2015/fencing.in",
		"/J/Processor/proc.cpp",
		"/J/Processor/comp.cpp",
		"/J/Processor/design.txt",
		"/J/Processor/assm",
		"/J/Processor/input",
		"/C/Users/DXsmiley/AppData/Roaming/Skype/My Skype Received Files/ram(1).py",
		"/J/TwoButtonRPG/spritesheet.xml",
		"/J/TwoButtonRPG/src/Button.cpp",
		"/J/TwoButtonRPG/src/Button.hpp",
		"/J/Flexium/include/Flexium/Memory.hpp",
		"/J/TwoButtonRPG/src/Main.cpp",
		"/J/Flexium/src/World.cpp",
		"/J/TwoButtonRPG/src/DisplayImage.cpp",
		"/J/Flexium/Doxyfile",
		"/J/Flexium/src/Object.cpp",
		"/J/TwoButtonRPG/src/Scene.hpp",
		"/J/TwoButtonRPG/src/Scene.cpp",
		"/J/Flexium/src/FlexiumUtility.cpp",
		"/J/Flexium/include/Flexium/FlexiumUtility.hpp",
		"/J/Flexium/include/Flexium/Timer.hpp",
		"/J/Flexium/src/TileMap.cpp",
		"/J/Flexium/TODO.md",
		"/J/TwoButtonRPG/src/SceneClassSelect.cpp",
		"/J/Flexium/src/Scene.cpp",
		"/J/Flexium/src/Scene.hpp",
		"/J/Flexium/src/SceneClassSelect.cpp",
		"/J/Flexium/src/SceneClassSelect.hpp",
		"/J/Flexium/src/Event.cpp",
		"/J/Flexium/include/Flexium/Event.hpp",
		"/J/Flexium/include/Flexium/Flexium.hpp",
		"/J/Flexium/src/Flexium.cpp",
		"/J/Flexium/Flexium.sublime-project",
		"/J/TwoButtonRPG/TwoButtonRPG.sublime-project",
		"/J/Flexium/src/Sprite.cpp",
		"/J/TwoButtonRPG/src/DisplayImage.hpp",
		"/J/Flexium/src/Vector.cpp",
		"/J/Flexium/include/Flexium/Vector.hpp",
		"/J/Flexium/include/Flexium/Object.hpp",
		"/J/Flexium/include/Flexium/Sprite.hpp",
		"/J/Flexium/.gitattributes",
		"/J/TwoButtonRPG/soundsheet.xml",
		"/J/TwoButtonRPG/makefile",
		"/J/Flexium/src/Console.cpp",
		"/J/Flexium/makefile",
		"/J/TwoButtonRPG/fontsheet.xml",
		"/J/TwoButtonRPG/src/Main.d",
		"/J/Inf/Procesor/in",
		"/J/Inf/Procesor/proc.cpp",
		"/C/Windows/Minidump/021415-26083-01.dmp",
		"/J/Inf/Procesor/proc2.cpp",
		"/C/Users/DXsmiley/AppData/Local/Temp/Temp1_DXsmiley-TestRepo-c460fce.zip/DXsmiley-TestRepo-c460fce/src/Main.cpp",
		"/J/Flexium/tests/RemoveObjectWhileIterating.cpp",
		"/J/Flexium/include/Flexium/Random.hpp",
		"/J/Flexium/utility/base_code/Main.cpp",
		"/J/Flexium/demo/font_terms_of_use.txt",
		"/J/Flexium/include/Flexium/TileMap.hpp",
		"/C/Users/DXsmiley/Downloads/wm2703/WriteMonkey/templates/Dropbox.template",
		"/J/Flexium/include/Flexium/Audio.hpp",
		"/J/Flexium/include/Flexium/Transform.hpp",
		"/J/Flexium/src/Transform.cpp",
		"/J/Flexium/demo/Demo.cpp",
		"/J/Flexium/src/Transform.hpp",
		"/J/test.cpp",
		"/J/Flexium/demo/spritesheet.xml"
	],
	"find":
	{
		"height": 34.0
	},
	"find_in_files":
	{
		"height": 90.0,
		"where_history":
		[
			"J:\\Flexium",
			"J:\\Drift"
		]
	},
	"find_state":
	{
		"case_sensitive": true,
		"find_history":
		[
			"port",
			"'),\n",
			"password",
			"username",
			"std::string",
			"40",
			"left",
			"::",
			"void",
			"text",
			"ord",
			"Word",
			"P.size()",
			"roport",
			"subsection",
			"2",
			"x",
			"long long int",
			"1",
			"800",
			"Scored",
			"T[i]",
			"::",
			"(int)(s[pos] - 'a')",
			"hopscotch",
			"hopscoth",
			"v",
			"fencing",
			"co",
			"co_1",
			"mem[i]",
			"reg",
			"colour_override",
			"IntRangeIterator",
			"@M",
			"auto",
			"i",
			"c[i]",
			"co",
			":",
			"c[i]",
			"cols[i]",
			"cols",
			"std",
			"int",
			"reg_instruction",
			"%%",
			"%",
			"M",
			"000",
			"m",
			"0",
			"\n|",
			"000",
			"x",
			"position",
			"di_pk",
			"source",
			"sprite",
			"orogin",
			"wizard",
			"world",
			"false",
			"24",
			"Event",
			"bit",
			"shif",
			"E",
			"shift",
			"callEvent",
			"translate",
			",\n",
			",",
			"node",
			"ss",
			"spr",
			"shared_pointer",
			"instance_on_instance_added",
			"NULL",
			"w",
			"Update",
			"setTriggerUpdate",
			"getTriggerUpdate",
			"o",
			"sf::",
			"scroll",
			"			\n",
			"\n			",
			"keyDownEx",
			"default",
			"keyDown",
			"rectangle",
			"virtual",
			"left",
			"SpawnPlatform",
			"void",
			"rand",
			";\n",
			"{};\n",
			"();\n",
			"world.",
			"DrawPartial",
			"world.",
			"world",
			"spriteLoad",
			"sf::Keyboard::",
			"input.",
			"window",
			"spriteDraw",
			"input.",
			"window",
			"Input::",
			"ffffffffffffffffffffffffffffff`",
			"spriteDraw",
			"Exclude",
			"latex",
			"Exclude",
			"getFps",
			"Time",
			"time",
			" ,",
			"  ",
			",",
			"PUGIXML_HAS_LONG_LONG",
			"minimap",
			"perc",
			"wheel",
			"scroll"
		],
		"highlight": true,
		"in_selection": false,
		"preserve_case": false,
		"regex": false,
		"replace_history":
		[
			"ukey",
			"uuid",
			"shared_ptr",
			"nullptr",
			"::sf::",
			"case",
			"keyReleased",
			"keyPressed",
			"",
			"right",
			"SpawnGround",
			"getWorld() -> ",
			"Sprite::load",
			"Input::Key::",
			"Input::",
			"Window::getHandle()",
			"Sprite::draw",
			"Input::",
			"Window::getHandle()",
			"",
			"draw",
			"fpsGet",
			",",
			" ,",
			" ",
			", ",
			", 0",
			"t",
			"",
			"case",
			"num",
			"Core::Buffer",
			"Core::Entity",
			"Core::World",
			"Core::MessageId",
			"): ",
			"Core::Message",
			"",
			"const bool&",
			"Determinant",
			"entity"
		],
		"reverse": false,
		"show_context": true,
		"use_buffer2": true,
		"whole_word": true,
		"wrap": true
	},
	"groups":
	[
		{
			"selected": 4,
			"sheets":
			[
				{
					"buffer": 0,
					"file": "Procfile",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 25,
						"regions":
						{
						},
						"selection":
						[
							[
								25,
								25
							]
						],
						"settings":
						{
							"syntax": "Packages/Text/Plain text.tmLanguage"
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 4,
					"type": "text"
				},
				{
					"buffer": 1,
					"file": "static/index.html",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 1020,
						"regions":
						{
						},
						"selection":
						[
							[
								1020,
								1020
							]
						],
						"settings":
						{
							"syntax": "Packages/HTML/HTML.tmLanguage",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 3,
					"type": "text"
				},
				{
					"buffer": 2,
					"file": "HabitCalOnline.sublime-project",
					"semi_transient": true,
					"settings":
					{
						"buffer_size": 45,
						"regions":
						{
						},
						"selection":
						[
							[
								45,
								45
							]
						],
						"settings":
						{
							"syntax": "Packages/JavaScript/JSON.tmLanguage"
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 2,
					"type": "text"
				},
				{
					"buffer": 3,
					"file": "requirements.txt",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 43,
						"regions":
						{
						},
						"selection":
						[
							[
								43,
								43
							]
						],
						"settings":
						{
							"syntax": "Packages/Text/Plain text.tmLanguage"
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 1,
					"type": "text"
				},
				{
					"buffer": 4,
					"file": "app/habit.py",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 1968,
						"regions":
						{
						},
						"selection":
						[
							[
								63,
								63
							]
						],
						"settings":
						{
							"syntax": "Packages/Python/Python.tmLanguage",
							"translate_tabs_to_spaces": false
						},
						"translation.x": -0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 0,
					"type": "text"
				}
			]
		}
	],
	"incremental_find":
	{
		"height": 23.0
	},
	"input":
	{
		"height": 31.0
	},
	"layout":
	{
		"cells":
		[
			[
				0,
				0,
				1,
				1
			]
		],
		"cols":
		[
			0.0,
			1.0
		],
		"rows":
		[
			0.0,
			1.0
		]
	},
	"menu_visible": false,
	"output.find_results":
	{
		"height": 0.0
	},
	"pinned_build_system": "",
	"project": "HabitCalOnline.sublime-project",
	"replace":
	{
		"height": 86.0
	},
	"save_all_on_build": true,
	"select_file":
	{
		"height": 0.0,
		"last_filter": "",
		"selected_items":
		[
			[
				"main",
				"TimeMe\\src\\Main.cpp"
			],
			[
				"wp",
				"WordFlow\\src\\WriterPanel.hpp"
			],
			[
				"text",
				"Flexium\\include\\Flexium\\Text.hpp"
			],
			[
				"input.h",
				"Flexium\\include\\Flexium\\Input.hpp"
			],
			[
				"proj",
				"WordFlow\\WordFlow.sublime-project"
			],
			[
				"pro",
				"WordFlow.sublime-project"
			],
			[
				"button",
				"TwoButtonRPG\\src\\Button.hpp"
			],
			[
				"world",
				"Flexium\\include\\Flexium\\World.hpp"
			],
			[
				"fu",
				"Flexium\\include\\Flexium\\FlexiumUtility.hpp"
			],
			[
				"di",
				"TwoButtonRPG\\src\\DisplayImage.hpp"
			],
			[
				"object",
				"Flexium\\include\\Flexium\\Object.hpp"
			],
			[
				"scene",
				"TwoButtonRPG\\src\\SceneClassSelect.cpp"
			],
			[
				"timer",
				"Flexium\\src\\Timer.cpp"
			],
			[
				"flexium",
				"Flexium\\include\\Flexium\\FlexiumUtility.hpp"
			],
			[
				"sprite",
				"Flexium\\src\\Sprite.cpp"
			],
			[
				"vec",
				"Flexium\\src\\Vector.cpp"
			],
			[
				"flex/vector",
				"Flexium\\include\\Flexium\\Vector.hpp"
			],
			[
				"spr",
				"TwoButtonRPG\\spritesheet.xml"
			],
			[
				".pro",
				"TwoButtonRPG\\TwoButtonRPG.sublime-project"
			],
			[
				"e",
				"Flexium\\include\\Flexium\\Event.hpp"
			],
			[
				"readme",
				"README.md"
			],
			[
				".hpp",
				"include\\Flexium\\Memory.hpp"
			],
			[
				"demo/sprite",
				"demo\\spritesheet.xml"
			],
			[
				"flex",
				"src\\Flexium.cpp"
			],
			[
				"demo",
				"demo\\Demo.cpp"
			],
			[
				"spirt",
				"include\\Flexium\\Sprite.hpp"
			],
			[
				"tilemap",
				"src\\TileMap.cpp"
			],
			[
				"make",
				"makefile"
			],
			[
				"window",
				"src\\Window.cpp"
			],
			[
				"obj",
				"src\\Object.cpp"
			],
			[
				"remove",
				"tests\\RemoveObjectWhileIterating.cpp"
			],
			[
				"addobj",
				"tests\\AddObjectWhileIterating.cpp"
			],
			[
				"obje",
				"include\\Flexium\\Object.hpp"
			],
			[
				"read",
				"README.md"
			],
			[
				"tml",
				"src\\TiledMapLoader.cpp"
			],
			[
				"m",
				"makefile"
			],
			[
				"git",
				".gitignore"
			],
			[
				"console",
				"src\\Console.cpp"
			],
			[
				"wo",
				"src\\World.cpp"
			],
			[
				"font",
				"demo\\fontsheet.xml"
			],
			[
				"windo",
				"src\\Window.cpp"
			],
			[
				"win",
				"tests\\WindowScaling.cpp"
			],
			[
				"rem",
				"tests\\RemoveObjectWhileIterating.cpp"
			],
			[
				"consol",
				"src\\Console.cpp"
			],
			[
				"vector",
				"include\\Flexium\\Vector.hpp"
			],
			[
				"tm",
				"include\\Flexium\\TileMap.hpp"
			],
			[
				"tex",
				"include\\Flexium\\Text.hpp"
			],
			[
				"ra",
				"include\\Flexium\\Random.hpp"
			],
			[
				"random",
				"src\\Random.cpp"
			],
			[
				"pug",
				"src\\pugixml.cpp"
			],
			[
				"input",
				"include\\Flexium\\Input.hpp"
			],
			[
				"inpu",
				"src\\Input.cpp"
			],
			[
				"f",
				"src\\FlexiumUtility.cpp"
			],
			[
				"fy",
				"src\\FlexiumUtility.cpp"
			],
			[
				"flexiu",
				"include\\Flexium\\Flexium.hpp"
			],
			[
				"eve",
				"include\\Flexium\\Event.hpp"
			],
			[
				"event",
				"src\\Event.cpp"
			],
			[
				"o",
				"include\\Flexium\\Object.hpp"
			],
			[
				"au",
				"include\\Flexium\\Audio.hpp"
			],
			[
				"audio",
				"src\\Audio.cpp"
			],
			[
				"spir",
				"include\\Sprite.hpp"
			],
			[
				"sound",
				"demo\\soundsheet.xml"
			],
			[
				"",
				"include\\Text.hpp"
			],
			[
				"conole",
				"src\\Console.cpp"
			],
			[
				"s",
				"src\\Sprite.cpp"
			],
			[
				"in",
				"src\\Input.cpp"
			],
			[
				"level",
				"LevelChangeRegion.cpp"
			],
			[
				"lrs",
				"MapLoadingRules.cpp"
			],
			[
				"fl",
				"Flexium.h"
			],
			[
				"ps",
				"ProjectileSimple.cpp"
			],
			[
				"abil",
				"Ability.hpp"
			],
			[
				"hud",
				"HUD.cpp"
			],
			[
				"player",
				"Player.hpp"
			],
			[
				"mlr",
				"MapLoadingRules.cpp"
			],
			[
				"ss",
				"spritesheet.xml"
			],
			[
				"pa",
				"PickupAbility.hpp"
			],
			[
				"pickup",
				"Pickup.cpp"
			],
			[
				"sprs",
				"spritesheet.xml"
			],
			[
				"ad",
				"AbilityDash.cpp"
			],
			[
				"abiltiy",
				"Ability.hpp"
			],
			[
				"abilty",
				"Ability.cpp"
			],
			[
				"lm",
				"LandMobile.hpp"
			],
			[
				"land",
				"LandMobile.hpp"
			],
			[
				"mobile",
				"Mobile.hpp"
			],
			[
				"gar",
				"maps\\garden.tmx"
			],
			[
				"maploader",
				"TiledMapLoader.h"
			],
			[
				"load",
				"MapLoadingRules.cpp"
			],
			[
				"spawner",
				"Spawner.hpp"
			],
			[
				"th",
				"TheMountain.cpp"
			],
			[
				"mapload",
				"MapLoadingRules.cpp"
			],
			[
				"tiled",
				"TiledMapLoader.h"
			],
			[
				"themou",
				"TheMountain.cpp"
			],
			[
				"me",
				"MapEditor.cpp"
			],
			[
				"con",
				"Console.cpp"
			],
			[
				"mes",
				"MapEditorSelector.hpp"
			],
			[
				"meo",
				"MapEditorObject.hpp"
			],
			[
				"inut",
				"Input.cpp"
			],
			[
				"me.",
				"MapEditor.cpp"
			],
			[
				"mape",
				"MapEditor.cpp"
			],
			[
				"fle",
				"Flexium.h"
			],
			[
				"fd",
				"FlexiumDemo.cpp"
			],
			[
				"mm",
				"MenuMain.cpp"
			],
			[
				"fu.h",
				"FlexiumUtility.h"
			],
			[
				"titl",
				"Title.cpp"
			],
			[
				"title",
				"Title.hpp"
			],
			[
				"menumain",
				"MenuMain.cpp"
			],
			[
				"ss.",
				"spritesheet.xml"
			],
			[
				"tti",
				"Title.cpp"
			],
			[
				"sp",
				"Spawner.hpp"
			],
			[
				"conso",
				"Console.cpp"
			],
			[
				"mbil",
				"Mobile.cpp"
			],
			[
				"damager",
				"Damager.hpp"
			],
			[
				"damaer",
				"Damager.hpp"
			],
			[
				"dama",
				"DamagerPiercing.cpp"
			],
			[
				"dp",
				"DamagerPiercing.cpp"
			],
			[
				"dam",
				"Damager.hpp"
			],
			[
				"mo",
				"Mobile.hpp"
			],
			[
				"es",
				"EnemySimple.cpp"
			],
			[
				"mobil",
				"Mobile.cpp"
			],
			[
				"d",
				"Damager.hpp"
			],
			[
				"damer",
				"Damager.cpp"
			],
			[
				"mob",
				"Mobile.cpp"
			],
			[
				"obile",
				"LandMobile.hpp"
			],
			[
				"cons",
				"Console.hpp"
			],
			[
				"worl",
				"World.hpp"
			],
			[
				"pl",
				"Player.cpp"
			],
			[
				"ene",
				"EnemySimple.cpp"
			],
			[
				"tile",
				"TiledMapLoader.cpp"
			]
		],
		"width": 0.0
	},
	"select_project":
	{
		"height": 500.0,
		"last_filter": "",
		"selected_items":
		[
			[
				"No",
				"J:\\NodeJS\\nodetest2\\NodeJSTutorial.sublime-project"
			],
			[
				"Ink",
				"J:\\Ink\\Ink.sublime-project"
			],
			[
				"Surface",
				"J:\\Surface\\Surface.sublime-project"
			],
			[
				"Them",
				"J:\\TheMountain\\TheMountain.sublime-project"
			],
			[
				"TheM",
				"J:\\TheMountain\\TheMountain.sublime-project"
			],
			[
				"",
				"J:\\LD31\\LD31.sublime-project"
			],
			[
				"THRM",
				"J:\\TheMountain\\TheMountain.sublime-project"
			],
			[
				"TheMout",
				"J:\\TheMountain\\TheMountain.sublime-project"
			],
			[
				"Flex",
				"J:\\Flexium\\Flexium.sublime-project"
			]
		],
		"width": 380.0
	},
	"select_symbol":
	{
		"height": 392.0,
		"last_filter": "",
		"selected_items":
		[
			[
				"Simple",
				"SimpleButton"
			],
			[
				"Start",
				"EventStartup"
			],
			[
				"EventStart",
				"EventStartup"
			],
			[
				"FE",
				"FlexiumException"
			],
			[
				"Event",
				"Event"
			],
			[
				"Debugger",
				"Debugger"
			],
			[
				"EventPlay",
				"EventPlayButton"
			],
			[
				"grph",
				"graphicDrawRectangleOutline"
			],
			[
				"graphi",
				"graphicDrawRectangleOutline"
			]
		],
		"width": 392.0
	},
	"selected_group": 0,
	"settings":
	{
	},
	"show_minimap": true,
	"show_open_files": false,
	"show_tabs": true,
	"side_bar_visible": true,
	"side_bar_width": 228.0,
	"status_bar_visible": true,
	"template_settings":
	{
	}
}
